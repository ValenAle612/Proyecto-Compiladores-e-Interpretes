.CODE
PUSH simple_heap_init
CALL
PUSH Amain
CALL
HALT

simple_heap_init:
RET 0

simple_malloc:
LOADFP ; Unit initialization
LOADSP
STOREFP ; Ends RA initialization
LOADHL ; hl
DUP ; hl
PUSH 1 ; 1
ADD ; hl + 1
STORE 4 ; Stores result (pointer to the base of the block)
LOAD 3 ; Loads the number of cells to allocate (parameter)
ADD
STOREHL ; Moves the heap limit (hl)
STOREFP
RET 1 ; Returns, removing the parameter

.DATA
VT_A: NOP
.CODE
Am1Stringcharint:
LOADFP
LOADSP
STOREFP
RMEM 1; Saving space for local variable v0
LOAD 3 ; parameter p1
STORE 0
LOAD 0 ; local variable v0
PUSH SystemprintSlnString
CALL
RMEM 1; Saving space for local variable v1
LOAD 4 ; parameter p2
STORE -1
LOAD -1 ; local variable v1
PUSH SystemprintClnchar
CALL
FMEM 2
LOAD 5 ; parameter p3
STORE 6
STOREFP
RET 3
FMEM 2 ; free space for local variables, 2 memory spaces were freed 
STOREFP
RET 3

Amain:
LOADFP
LOADSP
STOREFP
RMEM 1; Saving space for local variable v0
RMEM 1 ; pointer to the String at .HEAP
PUSH 5
PUSH simple_malloc
CALL
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'H' 
STOREREF 0 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'o' 
STOREREF 1 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'l' 
STOREREF 2 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'a' 
STOREREF 3 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 0 ; push the terminator
STOREREF 4
STORE 0
RMEM 1; Saving space for local variable v2
PUSH 'k' ; push character
STORE -1
RMEM 1; Saving space for local variable v1
RMEM 1
PUSH 10 ; push integer
LOAD -1 ; local variable v2
LOAD 0 ; local variable v0
PUSH Am1Stringcharint
CALL
STORE -2
LOAD -2 ; local variable v1
PUSH SystemprintIlnint
CALL
RMEM 1
LOAD -2 ; local variable v1
LOAD -1 ; local variable v2
RMEM 1 ; pointer to the String at .HEAP
PUSH 3
PUSH simple_malloc
CALL
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'x' 
STOREREF 0 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'd' 
STOREREF 1 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 0 ; push the terminator
STOREREF 2
PUSH Am1Stringcharint
CALL
PUSH SystemprintIlnint
CALL
RMEM 1
RMEM 1
PUSH 20 ; push integer
PUSH '#' ; push character
RMEM 1 ; pointer to the String at .HEAP
PUSH 5
PUSH simple_malloc
CALL
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'a' 
STOREREF 0 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'a' 
STOREREF 1 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'a' 
STOREREF 2 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'A' 
STOREREF 3 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 0 ; push the terminator
STOREREF 4
PUSH Am1Stringcharint
CALL
LOAD -1 ; local variable v2
RMEM 1 ; pointer to the String at .HEAP
PUSH 4
PUSH simple_malloc
CALL
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'j' 
STOREREF 0 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'j' 
STOREREF 1 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 'j' 
STOREREF 2 ; save the pushed letter
DUP ; duplicate the reference at the beggining of the String since STOREREF consumes it
PUSH 0 ; push the terminator
STOREREF 3
PUSH Am1Stringcharint
CALL
PUSH SystemprintIlnint
CALL
FMEM 3 ; free space for local variables, 3 memory spaces were freed 
STOREFP
RET 0

.DATA
VT_Object: NOP
.CODE
ObjectdebugPrintint:
LOADFP
LOADSP
STOREFP
LOAD 3
IPRINT
STOREFP
RET 1 ; Returns deleting the parameter

.DATA
VT_String: NOP
.CODE
.DATA
VT_System: NOP
.CODE
SystemprintCchar:
LOADFP
LOADSP
STOREFP
LOAD 3
CPRINT
STOREFP
RET 1 ; Returns deleting the parameter

SystemprintSString:
LOADFP
LOADSP
STOREFP
LOAD 3
SPRINT
STOREFP
RET 1 ; Returns deleting the parameter

Systemprintln:
LOADFP
LOADSP
STOREFP
PRNLN
STOREFP
RET 0 ; No parameters

SystemprintClnchar:
LOADFP
LOADSP
STOREFP
LOAD 3
CPRINT
PRNLN
STOREFP
RET 1 ; Returns deleting the parameter

SystemprintSlnString:
LOADFP
LOADSP
STOREFP
LOAD 3
SPRINT
PRNLN
STOREFP
RET 1 ; Returns deleting the parameter

Systemread:
LOADFP
LOADSP
STOREFP
READ   ; read the integer 
PUSH 48
SUB
STORE 3
STOREFP
RET 0 ; No parameters

SystemprintBboolean:
LOADFP
LOADSP
STOREFP
LOAD 3
BPRINT
STOREFP
RET 1 ; Returns deleting the parameter

SystemprintIlnint:
LOADFP
LOADSP
STOREFP
LOAD 3
IPRINT
PRNLN
STOREFP
RET 1 ; Returns deleting the parameter

SystemprintIint:
LOADFP
LOADSP
STOREFP
LOAD 3
IPRINT
STOREFP
RET 1 ; Returns deleting the parameter

SystemprintBlnboolean:
LOADFP
LOADSP
STOREFP
LOAD 3
BPRINT
PRNLN
STOREFP
RET 1 ; Returns deleting the parameter

